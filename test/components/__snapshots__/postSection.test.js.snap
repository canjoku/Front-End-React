// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<PostSection /> renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <PostSection
    post={
      Object {
        "body": "body of second post",
        "createdAt": "18-01-2019",
        "title": "title of second post",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h1
          className="c-post-section__primary-heading u-bottom-margin-medium "
        >
          title of second post
        </h1>,
        <p
          className="c-post-section__body u-bottom-margin-medium"
        >
          <Markdown>
            body of second post
          </Markdown>
        </p>,
      ],
      "className": "c-post-section",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "title of second post",
          "className": "c-post-section__primary-heading u-bottom-margin-medium ",
        },
        "ref": null,
        "rendered": "title of second post",
        "type": "h1",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Markdown>
            body of second post
          </Markdown>,
          "className": "c-post-section__body u-bottom-margin-medium",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": "body of second post",
          },
          "ref": null,
          "rendered": "body of second post",
          "type": [Function],
        },
        "type": "p",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h1
            className="c-post-section__primary-heading u-bottom-margin-medium "
          >
            title of second post
          </h1>,
          <p
            className="c-post-section__body u-bottom-margin-medium"
          >
            <Markdown>
              body of second post
            </Markdown>
          </p>,
        ],
        "className": "c-post-section",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "title of second post",
            "className": "c-post-section__primary-heading u-bottom-margin-medium ",
          },
          "ref": null,
          "rendered": "title of second post",
          "type": "h1",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Markdown>
              body of second post
            </Markdown>,
            "className": "c-post-section__body u-bottom-margin-medium",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": "body of second post",
            },
            "ref": null,
            "rendered": "body of second post",
            "type": [Function],
          },
          "type": "p",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
